---
import { getCollection } from "astro:content";
import Layout from "../layouts/Layout.astro";
import TrailCard from "../components/trailCard.astro";

const trails = await getCollection("trails");
const walks = await getCollection("walks");

const trailWalkMap = new Map();
const usedCovers = [];
for (const trail of trails) {
  const trailId = trail.id;
  const relatedWalks = walks.filter((walk) =>
    walk.data.trails?.some((t) => t.id === trailId)
  );

  const latestWalks = relatedWalks.sort(
    (a, b) => b.data.date.getTime() - a.data.date.getTime()
  );
  const usableCover = latestWalks.find((walk) => !usedCovers.includes(walk.id));
  usedCovers.push(usableCover.id);

  trailWalkMap.set(trailId, {
    ...trail,
    walks: relatedWalks,
    latestWalkDate: latestWalks[0].data.date,
    cover: usableCover.data.cover,
  });
}

const sortedTrails = Array.from(trailWalkMap.values()).sort(
  (a, b) => b.latestWalkDate.getTime() - a.latestWalkDate.getTime()
);
---

<Layout title="Trails">
  <h1 class="text-4xl font-light mb-6 pt-6">Trails</h1>
  <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
    {sortedTrails.map((trail) => <TrailCard trail={trail} />)}
  </div>
</Layout>
