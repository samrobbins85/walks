---
import { getGraphColouring } from "../utils/graphColoring";

const { routes: rawRoutes } = Astro.props;
const colouring = getGraphColouring(rawRoutes);
const routes = rawRoutes.map((route) => ({
  ...route,
  color: colouring[route.slug],
}));
---

<link
  rel="stylesheet"
  href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
/>

<div>
  <div
    id="map"
    style={{ height: "600px", width: "100%" }}
    class="rounded-lg"
    data-routes={JSON.stringify(routes)}
  >
    <div class="os-api-branding logo"></div>
  </div>
</div>

<script>
  import L from "leaflet";
  import { shuffle } from "../utils";
  const mapElement = document.getElementById("map");
  const routes = JSON.parse(mapElement.dataset.routes);
  const map = L.map("map");
  L.tileLayer(
    `https://api.os.uk/maps/raster/v1/zxy/Outdoor_3857/{z}/{x}/{y}.png?key=${
      import.meta.env.PUBLIC_OS_MAPS_KEY
    }`,
    {
      attribution:
        "<span>Contains OS data &copy; Crown copyright and database rights YYYY</span>".replace(
          "YYYY",
          new Date().getFullYear().toString()
        ),
      detectRetina: false,
      minNativeZoom: 7,
      minZoom: 6,
      maxZoom: 16,
    }
  ).addTo(map);

  let combinedBounds = L.latLngBounds([]);

  shuffle(routes).forEach((route) => {
    const layer = L.geoJSON(route.geojson, {
      style: {
        color: route.color,
        weight: 3,
      },
      onEachFeature: function (_feature, layer) {
        const tooltipText = route.title;

        layer.bindTooltip(tooltipText, {
          permanent: false,
          direction: "auto",
          sticky: true,
        });

        layer.on("click", () => {
          const url = `/walks/${route.slug}`;
          window.location.href = url;
        });
      },
    }).addTo(map);

    combinedBounds.extend(layer.getBounds());
  });
  const northumberlandBounds = L.latLngBounds(
    [54.7054, -2.7612],
    [55.8113, -1.3802]
  );
  map.setMaxBounds(combinedBounds.pad(0.2));
  map.fitBounds(northumberlandBounds);
</script>
