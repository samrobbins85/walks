---
import { Icon } from "astro-icon/components";
import { Image } from "astro:assets";

const { trail } = Astro.props;
const percentComplete = Math.round(
  (trail.data.completed / trail.data.length) * 100
);
---

<a
  href={`/trails/${trail.id}`}
  class="border border-slate-200 rounded-lg overflow-hidden"
>
  <Image src={trail.cover} alt="" class="h-72 object-cover" />
  <div class="flex flex-col p-6">
    <span class="text-xl font-medium">{trail.data.name}</span>
    <span class="text-slate-500 line-clamp-2 h-16"
      >{trail.data.description}</span
    >
    <div class="flex gap-x-4">
      <span class="flex items-center gap-x-2 text-sm text-slate-500">
        <Icon name="lucide:route" class="size-4" />
        {trail.data.length}km</span
      >
      <span class="flex items-center gap-x-2 text-sm text-slate-500">
        <Icon name="lucide:footprints" class="size-4" />
        {trail.walks.length}
        {trail.walks.length === 1 ? "walk" : "walks"}</span
      >
    </div>
    {
      trail.data.completed && (
        <div class="pt-4 flex flex-col">
          <span
            class={`text-xs font-medium pb-2 ${percentComplete === 100 ? "text-green-600" : "text-sky-600"}`}
          >
            {percentComplete === 100 ? "Completed" : "In progress"}
          </span>
          <div class="w-full h-2 bg-slate-200 rounded-full overflow-hidden">
            <div
              class={`h-full transition-all duration-300 ${percentComplete === 100 ? "bg-green-600" : "bg-sky-600"}`}
              style={`width: ${percentComplete}%;`}
            />
          </div>
          <span class="text-xs text-slate-600 pt-1">
            {percentComplete}% complete
          </span>
        </div>
      )
    }
  </div>
</a>
